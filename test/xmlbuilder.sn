require('lib/class')
require('lib/file')

XmlBuilder: class {
	.initialize: [outstream] {
		.out: outstream or File.stdout
	}
	
	.member_missing: [root_name] {
		builder: self
		[root_closure] {
			make_tag_emitter: [name] {
				{
					builder.out << "<" << name
					args: $.arguments
					if args.any?
						attributes: args.map_pairs [key, value] { key.to_string() + "=\"" + value + '"' }.join(' ')
						builder.out << " " << attributes if attributes.length > 0
					end

					unnamed_args: args.unnamed

					body: unnamed_args.detect { it.is_a?(Function) }

					if unnamed_args.any?
						builder.out << ">"
						unnamed_args.each {
							if it.is_a?(Function)
								it.local_missing: make_tag_emitter
								builder.out << it()
							else
								builder.out << it.to_string()
							end
						}
						builder.out << "</" << name << ">"
					else
						builder.out << " />"
					end
					nil
				}
			}

			make_tag_emitter(root_name)(root_closure)
		}
	}
}

xml: XmlBuilder()
xml.html {
	head {
		title("muh")
		meta(http_equiv: "Content-Type", content: "text/html")
		link(rel: "stylesheet", type: "text/css", src: "style.css")
	}
	body {
		div(class: #body) {
			h1("Goddag")
			p("hejsa")
			p("lol")
			p { "damn, woman!" }
		}
		
		ul(class: #list) {
			li("punkt 1")
			li("punkt 2")
			li("punkt 3")
		}
	}
}
